[{"/Users/macbook/Desktop/React Projects/radio-web/src/index.js":"1","/Users/macbook/Desktop/React Projects/radio-web/src/App.js":"2","/Users/macbook/Desktop/React Projects/radio-web/src/Data.js":"3"},{"size":411,"mtime":1638478231000,"results":"4","hashOfConfig":"5"},{"size":957,"mtime":1637845577000,"results":"6","hashOfConfig":"5"},{"size":2068,"mtime":1637856878000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1grtdri",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"/Users/macbook/Desktop/React Projects/radio-web/src/index.js",[],"/Users/macbook/Desktop/React Projects/radio-web/src/App.js",["16","17","18","19","20"],"import React, { useState, useEffect } from 'react';\nimport { DATA } from './Data.js'\nimport './App.css';\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\n\nfunction App() {\n\n  const [url, setUrl] = useState(null)\n\n  const changeUrl = (url) => {\n    setUrl(url);\n  }\n\n  return (\n    <div>\n      <div className=\"header\">Radio Station</div>\n      <div className=\"App\">\n\n\n\n        {DATA.map((item) => {\n          return (\n\n            \n            <a onClick={() => setUrl(item.url)} className=\"radio-station\">\n              <img src={item.image} />\n              \n              <a className=\"radio-title\">{item.id}</a>\n            </a>\n            \n          )\n        })}\n      </div>\n      <div className=\"player\">\n        <AudioPlayer\n          autoPlay\n          src={url}\n          onPlay={e => console.log(\"onPlay\")}\n        // other props here\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",["21","22"],"/Users/macbook/Desktop/React Projects/radio-web/src/Data.js",[],{"ruleId":"23","severity":1,"message":"24","line":1,"column":27,"nodeType":"25","messageId":"26","endLine":1,"endColumn":36},{"ruleId":"23","severity":1,"message":"27","line":11,"column":9,"nodeType":"25","messageId":"26","endLine":11,"endColumn":18},{"ruleId":"28","severity":1,"message":"29","line":26,"column":13,"nodeType":"30","endLine":26,"endColumn":75},{"ruleId":"31","severity":1,"message":"32","line":27,"column":15,"nodeType":"30","endLine":27,"endColumn":39},{"ruleId":"28","severity":1,"message":"29","line":29,"column":15,"nodeType":"30","endLine":29,"endColumn":42},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'changeUrl' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-global-assign","no-unsafe-negation"]